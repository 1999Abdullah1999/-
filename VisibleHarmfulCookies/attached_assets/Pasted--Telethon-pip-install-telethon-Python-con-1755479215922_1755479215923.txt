للبدء:

تأكد من تثبيت مكتبة Telethon (!pip install telethon).
ضع الكود الأخير في ملف Python (/content/فثسف.txt).
استبدل API_HASH في الملف بقيمة الـ API Hash الصحيحة لحسابك.
نفّذ الخلية التي تحتوي على await main().
اتبع التعليمات التفاعلية في مخرجات الخلية لإدخال رقم هاتفك ورمز التحقق و/أو كلمة مرور التحقق بخطوتين، ثم حدد قنوات المصدر والوجهة ونطاق الرسائل.
هذا الملخص يغطي الهيكل الحالي والميزات الرئيسية والتحسينات التي تم إجراؤها على الكود.

شرح تفصيلي لفكرة المشروع
الفكرة الأساسية:

يهدف هذا المشروع إلى بناء يوزربوت تليجرام (Userbot) يعمل كأداة مساعدة لك في نقل المحتوى (الملفات بشكل أساسي) من قناة تليجرام مصدر إلى قناة تليجرام وجهة، وذلك بالتعاون مع بوت تليجرام وسيط (@btt5bot) يقوم بمعالجة الروابط وتحويلها إلى ملفات قابلة للإعادة التوجيه.

لماذا نحتاج بوت وسيط؟

في بعض الأحيان، قد لا يتمكن اليوزربوت الخاص بك من تنزيل الملفات مباشرة من بعض القنوات (خاصة القنوات المقيدة أو التي تتطلب اشتراكاً خاصاً). البوتات الوسيطة مثل @btt5bot غالباً ما تكون لديها قدرات أكبر للوصول إلى الملفات وتحويل روابط الرسائل إلى ملفات يمكن للبوتات الأخرى (بما في ذلك اليوزربوت الخاص بك) التعامل معها وإعادة توجيهها.

مكونات المشروع:

اليوزربوت (Userbot): هذا هو الكود الذي قمنا بتطويره. يعمل هذا البوت بصلاحيات حساب تليجرام الخاص بك (وليس كبوت عادي). وظيفته الرئيسية هي:

الاتصال بتليجرام باستخدام بيانات حسابك (API ID و API Hash).
الاستماع إلى أوامرك وتفاعلاتك (عبر الكونسول/الواجهة).
قراءة الرسائل من قناة المصدر التي تحددها.
استخلاص روابط الرسائل التي تحتوي على ملفات.
إرسال هذه الروابط إلى البوت الوسيط (@btt5bot).
الاستماع لردود البوت الوسيط وتحديد ما إذا كان الرد يحتوي على ملف.
إذا استلم ملفاً من البوت الوسيط، يقوم بإعادة توجيهه إلى قناة الوجهة التي تحددها.
تخزين حالة التقدم للسماح بالاستئناف.
البوت الوسيط (@btt5bot): هذا بوت خارجي (ليس جزءاً من الكود الخاص بك). وظيفته الأساسية هي استقبال روابط رسائل تليجرام، ومعالجتها داخلياً (ربما يقوم بتنزيل الملف ثم إعادة تحميله أو إنشاء رابط مباشر جديد)، ثم إرسال الملف الناتج إليك (إلى اليوزربوت الخاص بك). كودنا يتفاعل معه فقط عن طريق إرسال الروابط إليه والاستماع لردوده.

Telegram API: هي الواجهة البرمجية التي توفرها تليجرام للمطورين للتفاعل مع منصة تليجرام. مكتبة Telethon تتواصل مع هذه الواجهة لإنجاز جميع المهام (الاتصال، جلب الرسائل، إرسال الرسائل، إعادة التوجيه، الاستماع للأحداث).

مكتبة Telethon: هي مكتبة Python تسهل التعامل مع Telegram API، سواء كـ Userbot أو Bot. هي التي توفر لنا الدوال والأدوات اللازمة للتفاعل مع تليجرام بدون الحاجة للتعامل المباشر مع بروتوكولات API المعقدة.

سير العمل (Workflow):

تقوم بتشغيل اليوزربوت والمصادقة باستخدام حسابك.
يطلب منك اليوزربوت تحديد قناة المصدر وقناة الوجهة ونطاق الرسائل التي تريد معالجتها.
يبدأ اليوزربوت بالمرور على الرسائل في نطاق الـ IDs المحدد في قناة المصدر.
لكل رسالة:
يتحقق مما إذا كانت الرسالة تحتوي على ملف.
إذا كان لديها ملف، يقوم بإنشاء رابط لهذه الرسالة ويرسله إلى @btt5bot.
ينتظر اليوزربوت رد من @btt5bot.
إذا استلم اليوزربوت ملفاً من @btt5bot (وهذا هو الرد المتوقع على الرابط)، يقوم بإعادة توجيه هذا الملف إلى قناة الوجهة.
إذا تجاوز وقت الانتظار دون استلام ملف، يعتبر ذلك فشلاً وينتقل إلى الرسالة التالية (مع تسجيل ذلك).
إذا كانت الرسالة الأصلية لا تحتوي على ملف، يتخطاها اليوزربوت.
يستمر اليوزربوت في هذه العملية حتى نهاية النطاق المحدد من الرسائل.
يقوم بحفظ حالة التقدم بشكل دوري للسماح بالاستئناف من حيث توقف.
المعلومات المستخدمة في الكود:

بيانات حسابك:
API_ID: معرف التطبيق الخاص بك من my.telegram.org.
API_HASH: مفتاح التطبيق الخاص بك من my.telegram.org.
SESSION_NAME: اسم لملف الجلسة الذي سيتم إنشاؤه لحفظ بيانات المصادقة (my_account.session).
phone_number: رقم هاتفك المستخدم للمصادقة الأولية.
code: رمز التحقق الذي ترسله تليجرام لرقم هاتفك أثناء المصادقة.
password (اختياري): كلمة مرور التحقق بخطوتين إذا كانت مفعلة لحسابك.
بيانات البوت الوسيط:
BOT2_USERNAME: اسم المستخدم للبوت الوسيط الذي ستتعاون معه (مثلاً @btt5bot).
بيانات القنوات والرسائل:
source_input: مدخل المستخدم لتحديد قناة المصدر (يمكن أن يكون username، ID، أو رابط).
dest_input: مدخل المستخدم لتحديد قناة الوجهة (يمكن أن يكون username، ID، أو رابط).
start_input: مدخل المستخدم لتحديد بداية نطاق الرسائل (يمكن أن يكون ID أو رابط).
end_input: مدخل المستخدم لتحديد نهاية نطاق الرسائل (يمكن أن يكون ID أو 0).
message_id: معرف فريد لكل رسالة في تليجرام، يستخدم لتحديد الرسائل الفردية وإنشاء الروابط.
channel_id: معرف فريد لكل قناة/مجموعة، يستخدم لتحديد القناة وإنشاء الروابط الخاصة (t.me/c/...).
بيانات إدارة الحالة:
STATE_FILE: اسم ملف JSON (state.json) حيث يتم حفظ حالة التقدم (قنوات، نطاق، IDs آخر رسالة معالجة/مرسلة/فاشلة، الإحصائيات).
إعدادات التحكم في السرعة:
DEFAULT_REPLY_TIMEOUT: المدة الزمنية (بالثواني) لانتظار رد البوت الوسيط بملف بعد إرسال الرابط.
DEFAULT_BATCH_SIZE: عدد الروابط التي يتم إرسالها ومعالجة ملفاتها قبل التوقف المؤقت.
DEFAULT_COOLDOWN_SECONDS: مدة التوقف المؤقت (بالثواني) بعد كل دفعة.